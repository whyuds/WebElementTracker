name: Build and Release

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  workflow_dispatch: # 允许手动触发工作流

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm install
      
      - name: Extract version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        if: startsWith(github.ref, 'refs/tags/v')

      - name: Set default version
        id: default_version
        run: echo "version=0.0.0" >> $GITHUB_OUTPUT
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}

      - name: Update version in package.json
        run: |
          $version = if ($env:GITHUB_REF.StartsWith('refs/tags/v')) { $env:GITHUB_REF.Substring(11) } else { '0.0.0' }
          $content = Get-Content package.json -Raw | ConvertFrom-Json
          $content.version = $version
          $content | ConvertTo-Json -Depth 100 | Set-Content package.json
        shell: pwsh

      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        run: npm run build:win
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Build for macOS
        if: matrix.os == 'macos-latest'
        run: npm run build:mac
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Package and Upload Chrome Extension
        if: matrix.os == 'windows-latest'
        run: |
          cd extension
          powershell Compress-Archive -Path "*" -DestinationPath "../dist/WebElementTracker-Extension-v${{ startsWith(github.ref, 'refs/tags/v') && steps.get_version.outputs.version || steps.default_version.outputs.version }}.zip" -Force
          cd ..
        shell: bash
      
      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: |
            dist/*.exe
            dist/WebElementTracker-Extension*zip

      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts
          path: dist/*.dmg
 
      
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            windows-artifacts/*.exe
            macos-artifacts/*.dmg
            extension-artifact/WebElementTracker-Extension*zip
          draft: false
          prerelease: false
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
